name: Run Tests with Coverage and PR Comment

on:
  push:
    branches: 
      - main
      - develop
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  pytest:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: uvlhub_root_password
          MYSQL_DATABASE: uvlhubdb_test
          MYSQL_USER: uvlhub_user
          MYSQL_PASSWORD: uvlhub_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Prepare environment
        run: |
          sed -i '/rosemary @ file:\/\/\/app/d' requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Tests with Coverage
        env:
          FLASK_ENV: testing
          MARIADB_HOSTNAME: 127.0.0.1
          MARIADB_PORT: 3306
          MARIADB_TEST_DATABASE: uvlhubdb_test
          MARIADB_USER: uvlhub_user
          MARIADB_PASSWORD: uvlhub_password
        run: |
          pytest app/modules/ --cov=app/modules/auth --cov=app/modules/featuremodel --cov=app/modules/flamapy --cov=app/modules/hubfile --cov=app/modules/notepad --cov=app/modules/profile --cov=app/modules/webhook --cov-report=xml:coverage.xml --cov-report=term --ignore-glob='*selenium*'

      - name: Get Detailed Coverage Report
        id: coverage_report
        run: |
          coverage_details=$(python -c 'import xml.etree.ElementTree as ET
            tree = ET.parse("coverage.xml")
            root = tree.getroot()
            coverage_report = "## Test Coverage Report\n"
            for file in root.iter("file"):
                filename = file.get("name")
                line_rate = file.get("lines-covered")
                total_lines = file.get("lines-valid")
                if total_lines:
                    line_percentage = float(line_rate) / float(total_lines) * 100
                    coverage_report += f"{filename}: {line_percentage:.2f}%\n"
            print(coverage_report)
          ')
          echo "coverage_report=$coverage_details" >> $GITHUB_ENV

      - name: Post Detailed Coverage as PR Comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ env.coverage_report }}
